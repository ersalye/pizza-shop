{"version":3,"sources":["hooks/useMenu.js","services/firebaseMenuService.js","components/navbar/navbar.js","helpers/components/clickOutside/clickOutside.js","UI/burger/burger.js","components/sidebar/sidebarPlaceholder/sidebarPlaceholder.js","components/sidebar/sidebar.js","helpers/functions/getPriceString.js","UI/card/card.js","components/mainContent/mainContent.js","UI/spinner/spinner.js","components/mainPage/mainPage.js","components/orderPage/orderItem/orderItem.js","components/noItemsBanner/noItemsBanner.js","components/orderPage/orderHistory/orderHistory.js","components/orderPage/orderPage.js","helpers/functions/calcPrice.js","UI/input/input.js","components/confirmPage/confirmPage.js","hooks/useLocalStorage.js","components/errorBoundary/errorBoundary.js","App.js","index.js"],"names":["menuService","_apiBase","route","fetch","this","res","json","console","warn","getData","useMenu","useState","menu","setMenu","useEffect","cancelled","a","getMenu","data","Navbar","cartItems","pricesString","numberOfItems","count","className","to","data-toggle","data-target","width","height","viewBox","fill","xmlns","d","ClickOutside","children","handler","wrapperRef","useRef","ref","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","useOutsideAlerter","Burger","isOpen","setIsOpen","open","onClick","preventDefault","handleDetailsClick","SidebarPlaceholder","Buttons","Array","map","item","index","key","type","role","aria-hidden","Sidebar","menuItems","header","id","length","getPriceString","price","currencyRate","euroPrice","toFixed","dollarPrice","Card","name","description","imageUrl","addToCart","priceString","src","alt","MainContent","Cards","menuItem","menuPositions","items","position","img","Spinner","MainPage","MenuLinks","OrderItem","quantity","removeFromCart","deleteFromCart","NoItemsBanner","OrderHistory","orderHistory","setCartItems","HistoryItems","timeStamp","Object","keys","date","Date","Number","dateString","getDate","getMonth","getUTCFullYear","getHours","getMinutes","OrderPage","flatMenu","newCartItems","itemIds","CartItems","itemData","find","parseMenuItem","orderProps","itemsLength","OrderButton","calcPrice","mainPrice","forEach","Input","inputId","label","placeholder","warningMessage","setValidForm","disabled","isValid","setValid","value","setValue","checkValid","split","join","inputClasses","htmlFor","aria-describedby","onChange","onInput","onBlur","ConfirmPage","clearCart","saveOrderToHistory","surname","address","validForm","isAllValid","setAllValid","isConfirmed","setConfirmed","orderNumber","Math","random","totalPrice","deliveryCost","totalPriceString","btnClasses","isEmptyOrder","valid","values","every","validateForm","field","oldVal","newVal","DeliveryInformation","Fragment","OrderInformationBanner","OrderConfirmedBanner","FormContent","rows","now","useLocalStorage","initialValue","window","localStorage","getItem","JSON","parse","error","log","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","ErrorBoundary","props","state","hasError","Component","App","setOrderHistory","isError","setError","isLoading","setLoading","flatMap","positionId","order","push","path","exact","render","toLowerCase","getCurrentMenuItem","match","params","menuHeader","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.0d20224b.chunk.js","sourcesContent":["import FirebaseMenuService from \"../services/firebaseMenuService\";\r\nimport {useState, useEffect} from \"react\";\r\n\r\nconst menuService = new FirebaseMenuService();\r\n\r\nconst useMenu = () => {\r\n  const [menu, setMenu] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let cancelled = false;\r\n\r\n    async function getData() {\r\n      const data = await menuService.getMenu();\r\n\r\n      if (!cancelled) {\r\n        setMenu(data);\r\n      }\r\n    }\r\n\r\n    getData();\r\n\r\n    return () => {\r\n      // cancel if unmounted\r\n      cancelled = true;\r\n    }\r\n  }, []);\r\n\r\n  return menu;\r\n};\r\n\r\nexport default useMenu;\r\n","class FirebaseMenuService {\r\n  _apiBase = 'https://pizza-shop-66ecb.firebaseio.com/';\r\n\r\n  async getData(route) {\r\n    try {\r\n      const res = await fetch(`${this._apiBase}/${route}`);\r\n      return await res.json();\r\n    } catch (e) {\r\n      console.warn(e);\r\n    }\r\n  }\r\n\r\n  async getMenu() {\r\n    return await this.getData('menu.json')\r\n  }\r\n\r\n}\r\n\r\nexport default FirebaseMenuService;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Navbar = ({cartItems, pricesString}) => {\r\n  const numberOfItems = cartItems.count;\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary justify-content-end sticky-top\">\r\n      <span className=\"badge badge-info\">{pricesString}</span>\r\n      <Link\r\n        to='/order'>\r\n        <button className=\"btn btn-secondary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n          <svg className=\"bi bi-cart3\"\r\n               width=\"25px\"\r\n               height=\"25px\"\r\n               viewBox=\"0 0 16 16\"\r\n               fill=\"currentColor\"\r\n               xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M0 1.5A.5.5 0 0 1 .5 1H2a.5.5 0 0 1 .485.379L2.89 3H14.5a.5.5 0 0 1 .49.598l-1 5a.5.5 0 0 1-.465.401l-9.397.472L4.415 11H13a.5.5 0 0 1 0 1H4a.5.5 0 0 1-.491-.408L2.01 3.607 1.61 2H.5a.5.5 0 0 1-.5-.5zM3.102 4l.84 4.479 9.144-.459L13.89 4H3.102zM5 12a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm7 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm-7 1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm7 0a1 1 0 1 0 0 2 1 1 0 0 0 0-2z\"/>\r\n          </svg>\r\n          <span className=\"badge badge-info\">{numberOfItems}</span>\r\n        </button>\r\n      </Link>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useRef, useEffect } from \"react\";\r\n\r\nfunction useOutsideAlerter(ref, handler) {\r\n  useEffect(() => {\r\n    function handleClickOutside(event) {\r\n      if (ref.current && !ref.current.contains(event.target)) {\r\n        handler();\r\n      }\r\n    }\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    document.addEventListener(\"touchmove \", handleClickOutside);\r\n    document.addEventListener(\"touchstart \", handleClickOutside);\r\n    document.addEventListener(\"scroll\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      document.removeEventListener(\"touchmove \", handleClickOutside);\r\n      document.removeEventListener(\"touchstart \", handleClickOutside);\r\n      document.removeEventListener(\"scroll\", handleClickOutside);\r\n    };\r\n  }, [handler, ref]);\r\n}\r\n\r\nfunction ClickOutside({children, handler}) {\r\n  const wrapperRef = useRef(null);\r\n  useOutsideAlerter(wrapperRef, handler);\r\n\r\n  return <div ref={wrapperRef}>{children}</div>;\r\n}\r\n\r\nexport default ClickOutside;\r\n","import React, {useState} from \"react\";\r\nimport \"./burger.css\"\r\nimport ClickOutside from \"../../helpers/components/clickOutside/clickOutside\";\r\n\r\nconst Burger = ({children}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const handleDetailsClick = (event) => {\r\n    event.preventDefault();\r\n    setIsOpen(!isOpen)\r\n  };\r\n\r\n  return (\r\n    <ClickOutside handler={() => setIsOpen(false)}>\r\n      <div className=\"burger\">\r\n        <details open={isOpen} onClick={(event) => handleDetailsClick(event)}>\r\n          <summary className=\"btn btn-primary burger__summary px-1 py-0 my-1\">\r\n            <svg className=\"bi bi-list\"\r\n                 width=\"1em\"\r\n                 height=\"1em\"\r\n                 viewBox=\"0 0 16 16\"\r\n                 fill=\"currentColor\"\r\n                 xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path\r\n                d=\"M2.5 11.5A.5.5 0 0 1 3 11h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4A.5.5 0 0 1 3 7h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4A.5.5 0 0 1 3 3h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"/>\r\n            </svg>\r\n          </summary>\r\n          <div className=\"burger__content rounded mt-2 px-2 pb-2\">\r\n            {children}\r\n          </div>\r\n        </details>\r\n      </div>\r\n    </ClickOutside>\r\n  );\r\n};\r\n\r\nexport default Burger;\r\n","import React from \"react\";\r\n\r\nconst SidebarPlaceholder = () => {\r\n  const arr = Array(3).fill(1);\r\n  const Buttons = arr.map((item, index) => {\r\n    return (\r\n      <button\r\n        key={index}\r\n        type=\"button\"\r\n        className=\"btn btn-primary mt-2 w-100\">\r\n        <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\">\r\n        </span>\r\n        Loading...\r\n      </button>\r\n    )\r\n   });\r\n\r\n  return (\r\n    <div>\r\n      {Buttons}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidebarPlaceholder;\r\n","import React from \"react\";\r\nimport \"./sidebar.css\"\r\nimport Burger from \"../../UI/burger/burger\";\r\nimport {Link} from \"react-router-dom\";\r\nimport SidebarPlaceholder from \"./sidebarPlaceholder/sidebarPlaceholder\";\r\n\r\nconst Sidebar = ({menuItems}) => {\r\n  let Buttons = menuItems.map(item => {\r\n    return (\r\n     <Link\r\n       to={`/menu/${item.header}`}\r\n       key={item.id}>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary mt-2 w-100\">\r\n        {item.header}\r\n      </button>\r\n     </Link>\r\n    )\r\n  });\r\n\r\n  if (!Buttons.length) {\r\n    Buttons = <SidebarPlaceholder/>\r\n  }\r\n\r\n  return (\r\n    <div className=\"sidebar rounded m-2 px-2 pb-2\">\r\n      <div className=\"sidebar-items\">\r\n        {Buttons}\r\n      </div>\r\n      <div className=\"sidebar-burger-menu\">\r\n        <Burger>\r\n          {Buttons}\r\n        </Burger>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","const getPriceString = (price, currencyRate =  1.13) => {\r\n  const euroPrice = price.toFixed(2);\r\n  const dollarPrice = (price * currencyRate).toFixed(2);\r\n\r\n  return `${euroPrice}€ / ${dollarPrice}$`\r\n};\r\n\r\nexport default getPriceString;\r\n","import React from \"react\";\r\nimport \"./card.css\"\r\nimport getPriceString from \"../../helpers/functions/getPriceString\";\r\n\r\nconst Card = (\r\n  {\r\n    name,\r\n    description,\r\n    imageUrl,\r\n    addToCart,\r\n    price\r\n  }) => {\r\n\r\n  const priceString = getPriceString(price);\r\n\r\n  return (\r\n    <div className=\"card mr-3 mb-2 border-secondary card-component\">\r\n      <h3 className=\"card-header\">{name}</h3>\r\n      <div className=\"image-wrap\">\r\n        <img\r\n          className=\"image\"\r\n          src={imageUrl}\r\n          alt={name}\r\n        />\r\n      </div>\r\n        <div className=\"card-body\">\r\n          <p className=\"card-text\">{description}</p>\r\n        </div>\r\n        <div className=\"card-footer text-muted d-flex justify-content-between align-items-baseline\">\r\n          <span>\r\n            {priceString}\r\n          </span>\r\n          <button onClick={addToCart} className=\"btn btn-secondary\">Add +</button>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"../../UI/card/card\";\r\n\r\nconst MainContent = ({menuItem, addToCart}) => {\r\n  const header = menuItem?.header;\r\n  const menuPositions = menuItem?.items;\r\n  let Cards;\r\n\r\n  if (menuPositions) {\r\n    Cards = menuPositions.map(position => {\r\n      return (\r\n        <Card\r\n          key={header + position.id}\r\n          name={position.name}\r\n          description={position.description}\r\n          imageUrl={position.img}\r\n          addToCart={() => addToCart(position.id)}\r\n          price={position.price}\r\n        />\r\n      )\r\n    }) ;\r\n  }\r\n\r\n  return (\r\n    <div className=\"mr-2 mt-2\">\r\n      <h1>{header}</h1>\r\n      <div className=\"d-flex justify-content-start flex-wrap w-100\">\r\n        {Cards}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainContent;\r\n","import React from \"react\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"spinner-border m-2\" role=\"status\">\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Spinner from \"../../UI/spinner/spinner\";\r\n\r\nconst MainPage = ({menuItems}) => {\r\n  const MenuLinks = menuItems.map(item => {\r\n    return (\r\n      <Link\r\n        className=\"btn btn-link\"\r\n        to={`/menu/${item.header}`}\r\n        key={item.id}>\r\n        {item.header}\r\n      </Link>\r\n    )\r\n  });\r\n\r\n  return (\r\n    <div className=\"jumbotron bg-transparent\">\r\n      <h1>Welcome to Pizza-Shop!</h1>\r\n      <h4 className=\"text-muted\">Original italian pizzas with fresh dough and carefully selected natural ingredients.</h4>\r\n      <hr className=\"my-4\"/>\r\n      <h4>In our restaurants pizzas are baked in a wood brick oven.</h4>\r\n      <h5>Our menu:</h5>\r\n      {\r\n        MenuLinks.length\r\n        ? <h5>{MenuLinks}</h5>\r\n        : <Spinner/>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\r\nimport \"./orderItem.css\"\r\n\r\nconst OrderItem = (\r\n  {\r\n    id,\r\n    name,\r\n    img,\r\n    quantity,\r\n    priceString,\r\n    addToCart,\r\n    removeFromCart,\r\n    deleteFromCart,\r\n  }) => {\r\n  return (\r\n    <div key={id} className=\"mb-3 mr-5 p-3 order-item\">\r\n      <div className=\"mb-3 image-order-wrap\">\r\n          <span>\r\n            <strong>{name}</strong>\r\n          </span>\r\n        <img\r\n          className=\"image-order border border-secondary rounded\"\r\n          src={img}\r\n          alt={name}\r\n        />\r\n      </div>\r\n      <div className=\"my-1\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary\"\r\n          onClick={() => removeFromCart(id)}\r\n        >\r\n          <strong>\r\n            -\r\n          </strong>\r\n        </button>\r\n        <span className=\"mx-2\">{quantity}</span>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary\"\r\n          onClick={() => addToCart(id)}\r\n        >\r\n          <strong>\r\n            +\r\n          </strong>\r\n        </button>\r\n      </div>\r\n      <div className=\"my-1\">\r\n        <span className=\"mr-2\">{priceString}</span>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary\"\r\n          onClick={() => deleteFromCart(id)}\r\n        >\r\n          <strong>\r\n            x\r\n          </strong>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderItem;\r\n","import React from \"react\";\r\n\r\nconst NoItemsBanner = () => {\r\n  return (\r\n    <div className=\"alert alert-secondary\">\r\n      <p className=\"mb-0\">You have no items in your shopping cart</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoItemsBanner;\r\n","import React, {useState} from \"react\";\r\n\r\nconst OrderHistory = ({orderHistory, setCartItems}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleDetailsClick = (event) => {\r\n    event.preventDefault();\r\n    setIsOpen(!isOpen)\r\n  };\r\n\r\n  const HistoryItems = orderHistory.map(item => {\r\n    const timeStamp = Object.keys(item)[0];\r\n    const date = new Date(Number(timeStamp));\r\n    const dateString =\r\n      `${date.getDate()}.${date.getMonth()}.${date.getUTCFullYear()}\r\n       ${date.getHours()}:${date.getMinutes()}`;\r\n\r\n    return (\r\n      <button\r\n        key={timeStamp}\r\n        className=\"btn btn-outline-info mb-1 d-block\"\r\n        onClick={() =>setCartItems(item[timeStamp])}\r\n      >\r\n        {dateString}\r\n      </button>\r\n    )\r\n  });\r\n\r\n  return (\r\n    <div className=\"mb-3\">\r\n      <span className=\"text-info\">You can repeat your order from the order history with one click.</span>\r\n      <details open={isOpen} onClick={(event) => handleDetailsClick(event)}>\r\n        <summary>\r\n          <span className=\"text-info\">Order history</span>\r\n        </summary>\r\n        <div className=\"rounded mt-2 px-2 pb-2\">\r\n          {\r\n            HistoryItems\r\n          }\r\n        </div>\r\n      </details>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderHistory;\r\n","import React from \"react\";\r\nimport \"./orderPage.css\"\r\nimport OrderItem from \"./orderItem/orderItem\";\r\nimport getPriceString from \"../../helpers/functions/getPriceString\";\r\nimport {Link} from \"react-router-dom\";\r\nimport NoItemsBanner from \"../noItemsBanner/noItemsBanner\";\r\nimport OrderHistory from \"./orderHistory/orderHistory\";\r\n\r\nconst OrderPage = (\r\n  {\r\n    cartItems,\r\n    flatMenu,\r\n    currencyRate,\r\n    pricesString,\r\n    addToCart,\r\n    removeFromCart,\r\n    deleteFromCart,\r\n    orderHistory,\r\n    setCartItems\r\n  }) => {\r\n\r\n  const newCartItems = {...cartItems};\r\n  delete newCartItems.count;\r\n  const itemIds = Object.keys(newCartItems);\r\n\r\n  const parseMenuItem = (id, flatMenu) => {\r\n    let name = 'Pizza Name';\r\n    let price = 0;\r\n    let img = '';\r\n    let quantity = 1;\r\n    let priceString = '';\r\n    const menuItem = flatMenu.find(item => Number(item.id) === Number(id));\r\n    if (menuItem) {\r\n      name = menuItem.name;\r\n      price = menuItem.price;\r\n      img = menuItem.img;\r\n      quantity = newCartItems[id];\r\n      const allPrice = (price * quantity);\r\n      priceString = getPriceString(allPrice, currencyRate);\r\n    }\r\n\r\n    return {\r\n      name,\r\n      img,\r\n      quantity,\r\n      priceString,\r\n    }\r\n  };\r\n\r\n  const CartItems = itemIds.map(id => {\r\n    const itemData = parseMenuItem(id, flatMenu);\r\n\r\n    const orderProps = {\r\n      id,\r\n      ...itemData,\r\n      addToCart,\r\n      removeFromCart,\r\n      deleteFromCart,\r\n    };\r\n\r\n    return (\r\n      <OrderItem\r\n        key={id}\r\n        {...orderProps}\r\n      />\r\n    )\r\n  });\r\n\r\n  const itemsLength = CartItems.length;\r\n  const OrderButton = (\r\n    <Link to=\"/confirm\">\r\n      <button type=\"button\" className=\"btn btn-info mb-5\">ORDER NOW</button>\r\n    </Link>\r\n  );\r\n\r\n  return (\r\n    <div className=\"mr-2 mt-2 order-page\">\r\n      <h1>Order</h1>\r\n      {\r\n        itemsLength\r\n          ? CartItems\r\n          : <NoItemsBanner/>\r\n      }\r\n      <h3>{pricesString}</h3>\r\n      {\r\n        itemsLength\r\n          ? OrderButton\r\n          : null\r\n      }\r\n      <OrderHistory\r\n        orderHistory={orderHistory}\r\n        setCartItems={setCartItems}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderPage;\r\n","const calcPrice = (cartItems, flatMenu) => {\r\n  const newCartItems = {...cartItems};\r\n  delete newCartItems.count;\r\n  let mainPrice = 0;\r\n  const itemIds = Object.keys(newCartItems);\r\n\r\n  itemIds.forEach(id => {\r\n    const menuItem = flatMenu.find(item => Number(item.id) === Number(id));\r\n    if (menuItem) {\r\n      const quantity = newCartItems[id];\r\n      const {price} = menuItem;\r\n      const allPrice = (price * quantity);\r\n\r\n      mainPrice += allPrice;\r\n    }\r\n\r\n  });\r\n  return mainPrice;\r\n};\r\n\r\nexport default calcPrice;\r\n","import React, {useState} from \"react\";\r\n\r\nconst Input = ({inputId, label, placeholder, warningMessage, setValidForm, disabled}) => {\r\n  const [isValid, setValid] = useState(true);\r\n  const [value, setValue] = useState('');\r\n\r\n  const onInput = event => {\r\n    setValue(event.target.value);\r\n    checkValid(event.target.value);\r\n  };\r\n\r\n  const checkValid = (value) => {\r\n    const string = value.split(' ').join('');\r\n    if (string === '') {\r\n      setValid(false);\r\n      setValidForm(false)\r\n    }\r\n    else {\r\n      setValid(true);\r\n      setValidForm(true)\r\n    }\r\n  };\r\n\r\n  let inputClasses = 'form-control';\r\n  if (!isValid) {\r\n    inputClasses += ' is-invalid'\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={label}>{label}</label>\r\n      <input\r\n        type=\"text\"\r\n        className={inputClasses}\r\n        id={inputId}\r\n        aria-describedby=\"emailHelp\"\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={(event) => onInput(event)}\r\n        onBlur={() => checkValid(value)}\r\n        disabled={disabled}\r\n      />\r\n      <div className=\"invalid-feedback\">\r\n        {warningMessage}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Input from \"../../UI/input/input\";\r\nimport getPriceString from \"../../helpers/functions/getPriceString\";\r\nimport {Link} from \"react-router-dom\";\r\nimport NoItemsBanner from \"../noItemsBanner/noItemsBanner\";\r\n\r\nconst ConfirmPage = (\r\n  {\r\n    price,\r\n    cartItems,\r\n    clearCart,\r\n    saveOrderToHistory\r\n  }) => {\r\n\r\n  const [validForm, setValidForm] = useState({\r\n    name: false,\r\n    surname: false,\r\n    address: false,\r\n  });\r\n  const [isAllValid, setAllValid] = useState(true);\r\n  const [isConfirmed, setConfirmed] = useState(false);\r\n  const orderNumber = (Math.random() * 1000).toFixed();\r\n  const totalPrice = price + 10;\r\n  const deliveryCost = getPriceString(10);\r\n  const totalPriceString = getPriceString(totalPrice);\r\n  let btnClasses = 'btn btn-info';\r\n  const isEmptyOrder = !isConfirmed && (Object.keys(cartItems).length <= 1);\r\n\r\n  if (!isAllValid || isConfirmed) {\r\n    btnClasses += ' disabled';\r\n  }\r\n\r\n  useEffect(() => {\r\n    const values = Object.values(validForm);\r\n    const valid = values.every(value => {\r\n      return value;\r\n    });\r\n\r\n    if (!valid) {\r\n      setAllValid(false);\r\n    } else {\r\n      setAllValid(true);\r\n    }\r\n  }, [validForm]);\r\n\r\n  const validateForm = (field, isValid) => {\r\n    setValidForm(oldVal => {\r\n      const newVal = {...oldVal};\r\n      newVal[field] = isValid;\r\n      return newVal;\r\n    })\r\n  };\r\n\r\n  const onClick = (event) => {\r\n    event.preventDefault();\r\n    if (isAllValid && !isConfirmed) {\r\n      setConfirmed(true);\r\n      const timeStamp = Date.now();\r\n      saveOrderToHistory(timeStamp, cartItems);\r\n      clearCart();\r\n    }\r\n  };\r\n\r\n  const DeliveryInformation = (\r\n    <React.Fragment>\r\n      <p className=\"mb-0\">Delivery {deliveryCost} (already included)</p>\r\n      <p className=\"mb-0\">(Delivery is free if your total price is more than 250€ / 282.5$)</p>\r\n    </React.Fragment>\r\n  );\r\n\r\n  const OrderInformationBanner = (\r\n    <div className=\"alert alert-warning\">\r\n      <p className=\"mb-0\">Total price: {totalPriceString}</p>\r\n      {\r\n        price >= 250\r\n          ? null\r\n          : DeliveryInformation\r\n      }\r\n    </div>\r\n  );\r\n\r\n  const OrderConfirmedBanner = (\r\n    <div className=\"alert alert-success\">\r\n      <p className=\"mb-0\">Your order has been confirmed</p>\r\n      <p className=\"mb-0\">Order number: {orderNumber}</p>\r\n    </div>\r\n  );\r\n\r\n  const FormContent = (\r\n    <React.Fragment>\r\n      <Input\r\n        inputId=\"nameInput\"\r\n        label=\"Name*\"\r\n        placeholder=\"Enter your name\"\r\n        warningMessage=\"Please enter your name\"\r\n        setValidForm={(isValid) => validateForm('name', isValid)}\r\n        disabled={isConfirmed}\r\n      />\r\n      <Input\r\n        inputId=\"surnameInput\"\r\n        label=\"Surname*\"\r\n        placeholder=\"Enter your surname\"\r\n        warningMessage=\"Please enter your surname\"\r\n        setValidForm={(isValid) => validateForm('surname', isValid)}\r\n        disabled={isConfirmed}\r\n      />\r\n      <Input\r\n        inputId=\"addressInput\"\r\n        label=\"Address*\"\r\n        placeholder=\"Enter your address\"\r\n        warningMessage=\"Please enter your Address\"\r\n        setValidForm={(isValid) => validateForm('address', isValid)}\r\n        disabled={isConfirmed}\r\n      />\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"commentsArea\">Comments</label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"commentsArea\"\r\n          rows=\"3\"\r\n          disabled={isConfirmed}>\r\n        </textarea>\r\n      </div>\r\n      {\r\n        isConfirmed\r\n          ? OrderConfirmedBanner\r\n          : OrderInformationBanner\r\n      }\r\n      <button\r\n        type=\"submit\"\r\n        className={btnClasses}\r\n        onClick={(event) => onClick(event)}\r\n      >CONFIRM\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form className=\"mr-4\">\r\n        <fieldset>\r\n          <legend>\r\n            <h1>\r\n              Confirmation\r\n            </h1>\r\n            <Link to=\"/order\">to order page</Link>\r\n            {\r\n              isEmptyOrder\r\n                ? <NoItemsBanner/>\r\n                : null\r\n            }\r\n          </legend>\r\n          {\r\n            isEmptyOrder\r\n            ? null\r\n            : FormContent\r\n          }\r\n        </fieldset>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ConfirmPage;\r\n","import { useState } from 'react';\r\n\r\nfunction useLocalStorage(key, initialValue) {\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  const setValue = value => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n}\r\n\r\nexport default useLocalStorage;\r\n","import React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError() {\r\n    return { hasError: true };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div className=\"alert alert-danger m-3\">\r\n          Something went wrong. Try\r\n          <Link to=\"/\"> Main page</Link>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, {useEffect, useState} from 'react';\nimport useMenu from \"./hooks/useMenu\";\nimport Navbar from \"./components/navbar/navbar\";\nimport Sidebar from \"./components/sidebar/sidebar\";\nimport \"./App.css\"\nimport MainContent from \"./components/mainContent/mainContent\";\nimport {HashRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport MainPage from \"./components/mainPage/mainPage\";\nimport OrderPage from \"./components/orderPage/orderPage\";\nimport calcPrice from \"./helpers/functions/calcPrice\";\nimport getPriceString from \"./helpers/functions/getPriceString\";\nimport ConfirmPage from \"./components/confirmPage/confirmPage\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport ErrorBoundary from \"./components/errorBoundary/errorBoundary\";\nimport Spinner from \"./UI/spinner/spinner\";\n\nfunction App() {\n  const [cartItems, setCartItems] = useLocalStorage('cartItems', {count: 0});\n  const [orderHistory, setOrderHistory] = useLocalStorage('orderHistory', []);\n  const [isError, setError] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n  const menu = useMenu();\n\n  useEffect(() => {\n    setError(false);\n    setLoading(true);\n  }, []);\n\n  useEffect(() => {\n    if (!menu) {\n      setError(true);\n      setLoading(false);\n    } else {\n      setError(false);\n      if (menu.length) {\n        setLoading(false);\n      }\n    }\n  }, [menu]);\n\n  let menuItems = [];\n  let flatMenu = [];\n  const currencyRate = 1.13;\n\n  if (menu) {\n    menuItems = menu.map(item => {\n      return {\n        header: item.header,\n        id: item.id,\n      }\n    });\n\n    const keys = Object.keys(menu);\n    flatMenu = keys.flatMap(key => {\n      return menu[key].items;\n    })\n  }\n\n  const mainPrice = calcPrice(cartItems, flatMenu);\n  const pricesString = getPriceString(mainPrice, currencyRate);\n\n  const getCurrentMenuItem = (name) => {\n    if (menu) {\n      return menu.find(item => {\n        return item.header.toLowerCase() === name.toLowerCase();\n      });\n    }\n  };\n\n  const addToCart = (positionId) => {\n    setCartItems(cartItems => {\n      const newCartItems = {...cartItems};\n\n      if (newCartItems[positionId]) {\n        newCartItems[positionId] = newCartItems[positionId] + 1;\n        newCartItems.count = newCartItems.count + 1;\n      } else {\n        newCartItems[positionId] = 1;\n        newCartItems.count = newCartItems.count + 1;\n      }\n\n      return newCartItems;\n    })\n  };\n\n  const removeFromCart = (positionId) => {\n    setCartItems(cartItems => {\n      const newCartItems = {...cartItems};\n      if (newCartItems.count === 0) {\n        return\n      }\n\n      newCartItems.count = newCartItems.count - 1;\n      newCartItems[positionId] = newCartItems[positionId] - 1;\n\n      if (newCartItems[positionId] === 0) {\n         delete newCartItems[positionId]\n      }\n\n      return newCartItems;\n    })\n  };\n\n  const deleteFromCart = (positionId) => {\n    setCartItems(cartItems => {\n      const newCartItems = {...cartItems};\n\n      if (newCartItems[positionId]) {\n        const quantity = newCartItems[positionId];\n        newCartItems.count = newCartItems.count - quantity;\n        delete newCartItems[positionId];\n      }\n\n      return newCartItems;\n    })\n  };\n\n  const clearCart = () => {\n    setCartItems({count: 0});\n  };\n\n  const saveOrderToHistory = (key, order) => {\n    setOrderHistory(oldVal => {\n      const newVal = [...oldVal];\n      newVal.push({[key]: order});\n      return newVal;\n    })\n  };\n\n\n  return (\n    <Router>\n      <React.Fragment>\n        <Navbar cartItems={cartItems} pricesString={pricesString}/>\n        <div className=\"d-flex justify-content-start\">\n          <div className=\"flex-shrink-1 sidebar-wrap\">\n            <Sidebar menuItems={menuItems}/>\n          </div>\n          <div className=\"main-content-wrap w-100\">\n            <Switch>\n              <Route path=\"/\" exact render={() => {\n                return (\n                  <ErrorBoundary>\n                    <MainPage menuItems={menuItems}/>\n                  </ErrorBoundary>\n                )\n              }}/>\n              <Route path=\"/order\" render={() => {\n                if (isError) {\n                  return <Redirect to=\"/\"/>\n                }\n                if (isLoading) {\n                  return <Spinner/>\n                }\n                return (\n                  <ErrorBoundary>\n                    <OrderPage\n                      cartItems={cartItems}\n                      flatMenu={flatMenu}\n                      currencyRate={currencyRate}\n                      pricesString={pricesString}\n                      addToCart={addToCart}\n                      removeFromCart={removeFromCart}\n                      deleteFromCart={deleteFromCart}\n                      orderHistory={orderHistory}\n                      setCartItems={setCartItems}\n                    />\n                  </ErrorBoundary>\n                )\n              }}/>\n              <Route path=\"/menu/:menuHeader\" render={({match}) => {\n                const {menuHeader}  = match.params;\n                const menuItem = getCurrentMenuItem(menuHeader);\n                if (menuItem) {\n                  return (\n                    <ErrorBoundary>\n                      <MainContent\n                        menuItem={menuItem}\n                        addToCart={addToCart}\n                        currencyRate={currencyRate}\n                      />\n                    </ErrorBoundary>\n                  )\n                } else if (menu || isError) {\n                  return <Redirect to=\"/\"/>\n                }\n              }}/>\n              <Route path=\"/confirm\" render={() => {\n                if (isError) {\n                  return <Redirect to=\"/\"/>\n                }\n                if (isLoading) {\n                  return <Spinner/>\n                }\n                return (\n                  <ErrorBoundary>\n                    <ConfirmPage\n                      price={mainPrice}\n                      cartItems={cartItems}\n                      clearCart={clearCart}\n                      saveOrderToHistory={saveOrderToHistory}\n                    />\n                  </ErrorBoundary>\n                )\n              }}/>\n              <Redirect to=\"/\"/>\n            </Switch>\n          </div>\n        </div>\n      </React.Fragment>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}